#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trial.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FinalTerm")]
	public partial class dbFinalTermDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertauthority(authority instance);
    partial void Updateauthority(authority instance);
    partial void Deleteauthority(authority instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void InsertcanDo(canDo instance);
    partial void UpdatecanDo(canDo instance);
    partial void DeletecanDo(canDo instance);
    partial void InsertCV(CV instance);
    partial void UpdateCV(CV instance);
    partial void DeleteCV(CV instance);
    partial void InsertCV_manager(CV_manager instance);
    partial void UpdateCV_manager(CV_manager instance);
    partial void DeleteCV_manager(CV_manager instance);
    partial void InsertJD(JD instance);
    partial void UpdateJD(JD instance);
    partial void DeleteJD(JD instance);
    partial void InsertJD_manager(JD_manager instance);
    partial void UpdateJD_manager(JD_manager instance);
    partial void DeleteJD_manager(JD_manager instance);
        #endregion
        public dbFinalTermDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FinalTermConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public dbFinalTermDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFinalTermDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFinalTermDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFinalTermDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<authority> authorities
		{
			get
			{
				return this.GetTable<authority>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<canDo> canDos
		{
			get
			{
				return this.GetTable<canDo>();
			}
		}
		
		public System.Data.Linq.Table<CV> CVs
		{
			get
			{
				return this.GetTable<CV>();
			}
		}
		
		public System.Data.Linq.Table<CV_manager> CV_managers
		{
			get
			{
				return this.GetTable<CV_manager>();
			}
		}
		
		public System.Data.Linq.Table<JD> JDs
		{
			get
			{
				return this.GetTable<JD>();
			}
		}
		
		public System.Data.Linq.Table<JD_manager> JD_managers
		{
			get
			{
				return this.GetTable<JD_manager>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authority")]
	public partial class authority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _canDo_id;
		
		private EntityRef<user> _user;
		
		private EntityRef<canDo> _canDo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OncanDo_idChanging(int value);
    partial void OncanDo_idChanged();
    #endregion
		
		public authority()
		{
			this._user = default(EntityRef<user>);
			this._canDo = default(EntityRef<canDo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canDo_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int canDo_id
		{
			get
			{
				return this._canDo_id;
			}
			set
			{
				if ((this._canDo_id != value))
				{
					if (this._canDo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncanDo_idChanging(value);
					this.SendPropertyChanging();
					this._canDo_id = value;
					this.SendPropertyChanged("canDo_id");
					this.OncanDo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_authority", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.authorities.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.authorities.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="canDo_authority", Storage="_canDo", ThisKey="canDo_id", OtherKey="canDo_id", IsForeignKey=true)]
		public canDo canDo
		{
			get
			{
				return this._canDo.Entity;
			}
			set
			{
				canDo previousValue = this._canDo.Entity;
				if (((previousValue != value) 
							|| (this._canDo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._canDo.Entity = null;
						previousValue.authorities.Remove(this);
					}
					this._canDo.Entity = value;
					if ((value != null))
					{
						value.authorities.Add(this);
						this._canDo_id = value.canDo_id;
					}
					else
					{
						this._canDo_id = default(int);
					}
					this.SendPropertyChanged("canDo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _email;
		
		private string _user_fname;
		
		private string _gender;
		
		private string _position;
		
		private string _password;
		
		private System.Nullable<int> _isBlocked;
		
		private EntitySet<authority> _authorities;
		
		private EntitySet<CV_manager> _CV_managers;
		
		private EntitySet<JD_manager> _JD_managers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onuser_fnameChanging(string value);
    partial void Onuser_fnameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnisBlockedChanging(System.Nullable<int> value);
    partial void OnisBlockedChanged();
    #endregion
		
		public user()
		{
			this._authorities = new EntitySet<authority>(new Action<authority>(this.attach_authorities), new Action<authority>(this.detach_authorities));
			this._CV_managers = new EntitySet<CV_manager>(new Action<CV_manager>(this.attach_CV_managers), new Action<CV_manager>(this.detach_CV_managers));
			this._JD_managers = new EntitySet<JD_manager>(new Action<JD_manager>(this.attach_JD_managers), new Action<JD_manager>(this.detach_JD_managers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_fname", DbType="NVarChar(100)")]
		public string user_fname
		{
			get
			{
				return this._user_fname;
			}
			set
			{
				if ((this._user_fname != value))
				{
					this.Onuser_fnameChanging(value);
					this.SendPropertyChanging();
					this._user_fname = value;
					this.SendPropertyChanged("user_fname");
					this.Onuser_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(30)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(30)")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBlocked", DbType="Int")]
		public System.Nullable<int> isBlocked
		{
			get
			{
				return this._isBlocked;
			}
			set
			{
				if ((this._isBlocked != value))
				{
					this.OnisBlockedChanging(value);
					this.SendPropertyChanging();
					this._isBlocked = value;
					this.SendPropertyChanged("isBlocked");
					this.OnisBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_authority", Storage="_authorities", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<authority> authorities
		{
			get
			{
				return this._authorities;
			}
			set
			{
				this._authorities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_CV_manager", Storage="_CV_managers", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<CV_manager> CV_managers
		{
			get
			{
				return this._CV_managers;
			}
			set
			{
				this._CV_managers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_JD_manager", Storage="_JD_managers", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<JD_manager> JD_managers
		{
			get
			{
				return this._JD_managers;
			}
			set
			{
				this._JD_managers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_authorities(authority entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_authorities(authority entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_CV_managers(CV_manager entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_CV_managers(CV_manager entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_JD_managers(JD_manager entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_JD_managers(JD_manager entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.canDo")]
	public partial class canDo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _canDo_id;
		
		private string _canDo_name;
		
		private string _canDo_code;
		
		private EntitySet<authority> _authorities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncanDo_idChanging(int value);
    partial void OncanDo_idChanged();
    partial void OncanDo_nameChanging(string value);
    partial void OncanDo_nameChanged();
    partial void OncanDo_codeChanging(string value);
    partial void OncanDo_codeChanged();
    #endregion
		
		public canDo()
		{
			this._authorities = new EntitySet<authority>(new Action<authority>(this.attach_authorities), new Action<authority>(this.detach_authorities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canDo_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int canDo_id
		{
			get
			{
				return this._canDo_id;
			}
			set
			{
				if ((this._canDo_id != value))
				{
					this.OncanDo_idChanging(value);
					this.SendPropertyChanging();
					this._canDo_id = value;
					this.SendPropertyChanged("canDo_id");
					this.OncanDo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canDo_name", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string canDo_name
		{
			get
			{
				return this._canDo_name;
			}
			set
			{
				if ((this._canDo_name != value))
				{
					this.OncanDo_nameChanging(value);
					this.SendPropertyChanging();
					this._canDo_name = value;
					this.SendPropertyChanged("canDo_name");
					this.OncanDo_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canDo_code", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string canDo_code
		{
			get
			{
				return this._canDo_code;
			}
			set
			{
				if ((this._canDo_code != value))
				{
					this.OncanDo_codeChanging(value);
					this.SendPropertyChanging();
					this._canDo_code = value;
					this.SendPropertyChanged("canDo_code");
					this.OncanDo_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="canDo_authority", Storage="_authorities", ThisKey="canDo_id", OtherKey="canDo_id")]
		public EntitySet<authority> authorities
		{
			get
			{
				return this._authorities;
			}
			set
			{
				this._authorities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_authorities(authority entity)
		{
			this.SendPropertyChanging();
			entity.canDo = this;
		}
		
		private void detach_authorities(authority entity)
		{
			this.SendPropertyChanging();
			entity.canDo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CV")]
	public partial class CV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CV_id;
		
		private string _applicant_name;
		
		private string _applied_position;
		
		private string _location;
		
		private string _CV_file;
		
		private System.DateTime _date_upload;
		
		private string _status;
		
		private string _CV_name;
		
		private EntitySet<CV_manager> _CV_managers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCV_idChanging(int value);
    partial void OnCV_idChanged();
    partial void Onapplicant_nameChanging(string value);
    partial void Onapplicant_nameChanged();
    partial void Onapplied_positionChanging(string value);
    partial void Onapplied_positionChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnCV_fileChanging(string value);
    partial void OnCV_fileChanged();
    partial void Ondate_uploadChanging(System.DateTime value);
    partial void Ondate_uploadChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnCV_nameChanging(string value);
    partial void OnCV_nameChanged();
    #endregion
		
		public CV()
		{
			this._CV_managers = new EntitySet<CV_manager>(new Action<CV_manager>(this.attach_CV_managers), new Action<CV_manager>(this.detach_CV_managers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CV_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CV_id
		{
			get
			{
				return this._CV_id;
			}
			set
			{
				if ((this._CV_id != value))
				{
					this.OnCV_idChanging(value);
					this.SendPropertyChanging();
					this._CV_id = value;
					this.SendPropertyChanged("CV_id");
					this.OnCV_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicant_name", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string applicant_name
		{
			get
			{
				return this._applicant_name;
			}
			set
			{
				if ((this._applicant_name != value))
				{
					this.Onapplicant_nameChanging(value);
					this.SendPropertyChanging();
					this._applicant_name = value;
					this.SendPropertyChanged("applicant_name");
					this.Onapplicant_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applied_position", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string applied_position
		{
			get
			{
				return this._applied_position;
			}
			set
			{
				if ((this._applied_position != value))
				{
					this.Onapplied_positionChanging(value);
					this.SendPropertyChanging();
					this._applied_position = value;
					this.SendPropertyChanged("applied_position");
					this.Onapplied_positionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CV_file", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string CV_file
		{
			get
			{
				return this._CV_file;
			}
			set
			{
				if ((this._CV_file != value))
				{
					this.OnCV_fileChanging(value);
					this.SendPropertyChanging();
					this._CV_file = value;
					this.SendPropertyChanged("CV_file");
					this.OnCV_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_upload", DbType="Date NOT NULL")]
		public System.DateTime date_upload
		{
			get
			{
				return this._date_upload;
			}
			set
			{
				if ((this._date_upload != value))
				{
					this.Ondate_uploadChanging(value);
					this.SendPropertyChanging();
					this._date_upload = value;
					this.SendPropertyChanged("date_upload");
					this.Ondate_uploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(100)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CV_name", DbType="NChar(100)")]
		public string CV_name
		{
			get
			{
				return this._CV_name;
			}
			set
			{
				if ((this._CV_name != value))
				{
					this.OnCV_nameChanging(value);
					this.SendPropertyChanging();
					this._CV_name = value;
					this.SendPropertyChanged("CV_name");
					this.OnCV_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CV_CV_manager", Storage="_CV_managers", ThisKey="CV_id", OtherKey="CV_id")]
		public EntitySet<CV_manager> CV_managers
		{
			get
			{
				return this._CV_managers;
			}
			set
			{
				this._CV_managers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CV_managers(CV_manager entity)
		{
			this.SendPropertyChanging();
			entity.CV = this;
		}
		
		private void detach_CV_managers(CV_manager entity)
		{
			this.SendPropertyChanging();
			entity.CV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CV_managers")]
	public partial class CV_manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _CV_id;
		
		private EntityRef<CV> _CV;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnCV_idChanging(int value);
    partial void OnCV_idChanged();
    #endregion
		
		public CV_manager()
		{
			this._CV = default(EntityRef<CV>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CV_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CV_id
		{
			get
			{
				return this._CV_id;
			}
			set
			{
				if ((this._CV_id != value))
				{
					if (this._CV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCV_idChanging(value);
					this.SendPropertyChanging();
					this._CV_id = value;
					this.SendPropertyChanged("CV_id");
					this.OnCV_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CV_CV_manager", Storage="_CV", ThisKey="CV_id", OtherKey="CV_id", IsForeignKey=true)]
		public CV CV
		{
			get
			{
				return this._CV.Entity;
			}
			set
			{
				CV previousValue = this._CV.Entity;
				if (((previousValue != value) 
							|| (this._CV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CV.Entity = null;
						previousValue.CV_managers.Remove(this);
					}
					this._CV.Entity = value;
					if ((value != null))
					{
						value.CV_managers.Add(this);
						this._CV_id = value.CV_id;
					}
					else
					{
						this._CV_id = default(int);
					}
					this.SendPropertyChanged("CV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_CV_manager", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.CV_managers.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.CV_managers.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JD")]
	public partial class JD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JD_id;
		
		private string _company_name;
		
		private string _hired_position;
		
		private string _location;
		
		private string _JD_file;
		
		private int _isOffered;
		
		private System.DateTime _date_upload;
		
		private string _company_images;
		
		private string _status;
		
		private string _position_des;
		
		private string _JD_name;
		
		private EntitySet<JD_manager> _JD_managers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJD_idChanging(int value);
    partial void OnJD_idChanged();
    partial void Oncompany_nameChanging(string value);
    partial void Oncompany_nameChanged();
    partial void Onhired_positionChanging(string value);
    partial void Onhired_positionChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnJD_fileChanging(string value);
    partial void OnJD_fileChanged();
    partial void OnisOfferedChanging(int value);
    partial void OnisOfferedChanged();
    partial void Ondate_uploadChanging(System.DateTime value);
    partial void Ondate_uploadChanged();
    partial void Oncompany_imagesChanging(string value);
    partial void Oncompany_imagesChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onposition_desChanging(string value);
    partial void Onposition_desChanged();
    partial void OnJD_nameChanging(string value);
    partial void OnJD_nameChanged();
    #endregion
		
		public JD()
		{
			this._JD_managers = new EntitySet<JD_manager>(new Action<JD_manager>(this.attach_JD_managers), new Action<JD_manager>(this.detach_JD_managers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JD_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JD_id
		{
			get
			{
				return this._JD_id;
			}
			set
			{
				if ((this._JD_id != value))
				{
					this.OnJD_idChanging(value);
					this.SendPropertyChanging();
					this._JD_id = value;
					this.SendPropertyChanged("JD_id");
					this.OnJD_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_name", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string company_name
		{
			get
			{
				return this._company_name;
			}
			set
			{
				if ((this._company_name != value))
				{
					this.Oncompany_nameChanging(value);
					this.SendPropertyChanging();
					this._company_name = value;
					this.SendPropertyChanged("company_name");
					this.Oncompany_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hired_position", DbType="Char(200) NOT NULL", CanBeNull=false)]
		public string hired_position
		{
			get
			{
				return this._hired_position;
			}
			set
			{
				if ((this._hired_position != value))
				{
					this.Onhired_positionChanging(value);
					this.SendPropertyChanging();
					this._hired_position = value;
					this.SendPropertyChanged("hired_position");
					this.Onhired_positionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JD_file", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string JD_file
		{
			get
			{
				return this._JD_file;
			}
			set
			{
				if ((this._JD_file != value))
				{
					this.OnJD_fileChanging(value);
					this.SendPropertyChanging();
					this._JD_file = value;
					this.SendPropertyChanged("JD_file");
					this.OnJD_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOffered", DbType="Int NOT NULL")]
		public int isOffered
		{
			get
			{
				return this._isOffered;
			}
			set
			{
				if ((this._isOffered != value))
				{
					this.OnisOfferedChanging(value);
					this.SendPropertyChanging();
					this._isOffered = value;
					this.SendPropertyChanged("isOffered");
					this.OnisOfferedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_upload", DbType="Date NOT NULL")]
		public System.DateTime date_upload
		{
			get
			{
				return this._date_upload;
			}
			set
			{
				if ((this._date_upload != value))
				{
					this.Ondate_uploadChanging(value);
					this.SendPropertyChanging();
					this._date_upload = value;
					this.SendPropertyChanged("date_upload");
					this.Ondate_uploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_images", DbType="Char(100)")]
		public string company_images
		{
			get
			{
				return this._company_images;
			}
			set
			{
				if ((this._company_images != value))
				{
					this.Oncompany_imagesChanging(value);
					this.SendPropertyChanging();
					this._company_images = value;
					this.SendPropertyChanged("company_images");
					this.Oncompany_imagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(100)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position_des", DbType="Char(1000)")]
		public string position_des
		{
			get
			{
				return this._position_des;
			}
			set
			{
				if ((this._position_des != value))
				{
					this.Onposition_desChanging(value);
					this.SendPropertyChanging();
					this._position_des = value;
					this.SendPropertyChanged("position_des");
					this.Onposition_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JD_name", DbType="NChar(100)")]
		public string JD_name
		{
			get
			{
				return this._JD_name;
			}
			set
			{
				if ((this._JD_name != value))
				{
					this.OnJD_nameChanging(value);
					this.SendPropertyChanging();
					this._JD_name = value;
					this.SendPropertyChanged("JD_name");
					this.OnJD_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JD_JD_manager", Storage="_JD_managers", ThisKey="JD_id", OtherKey="JD_id")]
		public EntitySet<JD_manager> JD_managers
		{
			get
			{
				return this._JD_managers;
			}
			set
			{
				this._JD_managers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JD_managers(JD_manager entity)
		{
			this.SendPropertyChanging();
			entity.JD = this;
		}
		
		private void detach_JD_managers(JD_manager entity)
		{
			this.SendPropertyChanging();
			entity.JD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JD_managers")]
	public partial class JD_manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _JD_id;
		
		private EntityRef<JD> _JD;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnJD_idChanging(int value);
    partial void OnJD_idChanged();
    #endregion
		
		public JD_manager()
		{
			this._JD = default(EntityRef<JD>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JD_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JD_id
		{
			get
			{
				return this._JD_id;
			}
			set
			{
				if ((this._JD_id != value))
				{
					if (this._JD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJD_idChanging(value);
					this.SendPropertyChanging();
					this._JD_id = value;
					this.SendPropertyChanged("JD_id");
					this.OnJD_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JD_JD_manager", Storage="_JD", ThisKey="JD_id", OtherKey="JD_id", IsForeignKey=true)]
		public JD JD
		{
			get
			{
				return this._JD.Entity;
			}
			set
			{
				JD previousValue = this._JD.Entity;
				if (((previousValue != value) 
							|| (this._JD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JD.Entity = null;
						previousValue.JD_managers.Remove(this);
					}
					this._JD.Entity = value;
					if ((value != null))
					{
						value.JD_managers.Add(this);
						this._JD_id = value.JD_id;
					}
					else
					{
						this._JD_id = default(int);
					}
					this.SendPropertyChanged("JD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_JD_manager", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.JD_managers.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.JD_managers.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
